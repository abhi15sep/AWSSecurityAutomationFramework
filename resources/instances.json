{
  "AWSTemplateFormatVersion" : "2010-09-09",
 
  "Description" : "Beta Instances",
 
  "Parameters": {
    "SecurityGroup" : {
    	"Type" : "String",
    	"Description" : "Security Group"
    },
    "Subnet1" : {
    	"Type" : "String",
    	"Description" : "Subnet1"
    },
    "Subnet2" : {
    	"Type" : "String",
    	"Description" : "Subnet2"
    },
    "InstanceType" : {
      "Description" : "EC2 instance type",
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : [ "t1.micro", "t2.micro", "t2.small", "t2.medium", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"]
    },
    "ModuleName" : {
      "Description" : "The name of the JavaScript file for ami lookup function",
      "Type" : "String",
      "Default" : "amilookup"
    },
    "S3Bucket" : {
      "Description" : "The name of the bucket that contains your packaged source",
      "Type" : "String"
    },
    "S3ZipFile" : {
      "Description" : "The name of the ZIP package",
      "Type" : "String",
      "Default" : "amilookup.zip"
    },
    "KeyName" : {
      "Description" : "Key Name (optional)",
      "Type" : "String",
      "Default" : ""
    },
    "PingMe" : {
    	"Description" : "Whether or not to set up the ping test",
    	"Type" : "String",
    	"Default" : "false"
    }
  },
 
  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "PV64"   },
      "t2.micro"    : { "Arch" : "HVM64"  },
      "t2.small"    : { "Arch" : "HVM64"  },
      "t2.medium"   : { "Arch" : "HVM64"  },
      "m1.small"    : { "Arch" : "PV64"   },
      "m1.medium"   : { "Arch" : "PV64"   },
      "m1.large"    : { "Arch" : "PV64"   },
      "m1.xlarge"   : { "Arch" : "PV64"   },
      "m2.xlarge"   : { "Arch" : "PV64"   },
      "m2.2xlarge"  : { "Arch" : "PV64"   },
      "m2.4xlarge"  : { "Arch" : "PV64"   },
      "m3.medium"   : { "Arch" : "HVM64"  },
      "m3.large"    : { "Arch" : "HVM64"  },
      "m3.xlarge"   : { "Arch" : "HVM64"  },
      "m3.2xlarge"  : { "Arch" : "HVM64"  },
      "c1.medium"   : { "Arch" : "PV64"   },
      "c1.xlarge"   : { "Arch" : "PV64"   },
      "c3.large"    : { "Arch" : "HVM64"  },
      "c3.xlarge"   : { "Arch" : "HVM64"  },
      "c3.2xlarge"  : { "Arch" : "HVM64"  },
      "c3.4xlarge"  : { "Arch" : "HVM64"  },
      "c3.8xlarge"  : { "Arch" : "HVM64"  },
      "c4.large"    : { "Arch" : "HVM64"  },
      "c4.xlarge"   : { "Arch" : "HVM64"  },
      "c4.2xlarge"  : { "Arch" : "HVM64"  },
      "c4.4xlarge"  : { "Arch" : "HVM64"  },
      "c4.8xlarge"  : { "Arch" : "HVM64"  },
      "g2.2xlarge"  : { "Arch" : "HVMG2"  },
      "r3.large"    : { "Arch" : "HVM64"  },
      "r3.xlarge"   : { "Arch" : "HVM64"  },
      "r3.2xlarge"  : { "Arch" : "HVM64"  },
      "r3.4xlarge"  : { "Arch" : "HVM64"  },
      "r3.8xlarge"  : { "Arch" : "HVM64"  },
      "i2.xlarge"   : { "Arch" : "HVM64"  },
      "i2.2xlarge"  : { "Arch" : "HVM64"  },
      "i2.4xlarge"  : { "Arch" : "HVM64"  },
      "i2.8xlarge"  : { "Arch" : "HVM64"  },
      "d2.xlarge"   : { "Arch" : "HVM64"  },
      "d2.2xlarge"  : { "Arch" : "HVM64"  },
      "d2.4xlarge"  : { "Arch" : "HVM64"  },
      "d2.8xlarge"  : { "Arch" : "HVM64"  },
      "hi1.4xlarge" : { "Arch" : "HVM64"  },
      "hs1.8xlarge" : { "Arch" : "HVM64"  },
      "cr1.8xlarge" : { "Arch" : "HVM64"  },
      "cc2.8xlarge" : { "Arch" : "HVM64"  }
    }
  },
  
  "Conditions" : {
    "AddKey" : {"Fn::Not" : [{"Fn::Equals" : [{"Ref" : "KeyName"}, ""]}] },
    "PingMe" : {"Fn::Equals" : [{"Ref" : "PingMe"}, "true"]}
  },
 
  "Resources" : {
  
  	"AllowNothingRole": {
         "Type": "AWS::IAM::Role",
         "Properties": {
             "RoleName": {"Fn::Join": ["-", ["AllowNothingRole", {"Ref": "AWS::Region"}]]},
          	"AssumeRolePolicyDocument": {
               "Version" : "2012-10-17",
               "Statement": [ {
                  	"Effect": "Allow",
                  	"Principal": {"Service": [ "ec2.amazonaws.com" ]},
                  	"Action": [ "sts:AssumeRole" ]
               	} ]
            },
            "Path": "/",
            "Policies": [ {
               "PolicyName": "AllowNothingPolicy",
               "PolicyDocument": {
                  "Version" : "2012-10-17",
                  "Statement": [ {
                     "Effect": "Deny",
                     "Action": "*",
                     "Resource": "*"
                 	 } ]
               	}
           	} ]
       	 }
      },
      "BetaInstanceProfile": {
         "Type": "AWS::IAM::InstanceProfile",
         "Properties": {
            "Path": "/",
            "Roles": [ {"Ref": "AllowNothingRole"} ]
         }
       },
       
 	"Ec2Instance1" : {
		  "Type" : "AWS::EC2::Instance",
		  "Properties" : {
		    "InstanceType"   : { "Ref" : "InstanceType" },
    		"ImageId": { "Fn::GetAtt": [ "AMIInfo", "Id" ] },
    		"KeyName" : 
    			 {"Fn::If" : 
    			 	[
    			 		"AddKey",
      					{"Ref" : "KeyName"},
      					{"Ref" : "AWS::NoValue"}
  				    ]
  				 },
		    "IamInstanceProfile" : { "Ref" : "BetaInstanceProfile" },
		    "Tags" : [ { "Key" : "Name", "Value" : "Radical Software Beta 1" } ],
		    "NetworkInterfaces": [ {
		      "AssociatePublicIpAddress": "true",
		      "DeviceIndex": "0",
		      "GroupSet": [{"Ref" : "SecurityGroup"}],
		      "SubnetId": {"Ref" : "Subnet1" }
		    } ],
		    "UserData": { "Fn::Base64": { "Fn::Join": [ "", [
      			"#!/bin/bash -e\n",
      			"yum -y install httpd"
     		] ] } }
		 }
	},
	
	"Ec2Instance2" : {
		  "Type" : "AWS::EC2::Instance",
		  "Properties" : {
		    "InstanceType"   : { "Ref" : "InstanceType" },
    		"ImageId": { "Fn::GetAtt": [ "AMIInfo", "Id" ] },
    		"KeyName" : 
    			 {"Fn::If" : 
    			 	[
    			 		"AddKey",
      					{"Ref" : "KeyName"},
      					{"Ref" : "AWS::NoValue"}
  				    ]
  				 },
		    "IamInstanceProfile" : { "Ref" : "BetaInstanceProfile" },
		    "Tags" : [ { "Key" : "Name", "Value" : "Radical Software Beta 2" } ],
		    "NetworkInterfaces": [ {
		      "AssociatePublicIpAddress": "true",
		      "DeviceIndex": "0",
		      "GroupSet": [{"Ref" : "SecurityGroup"}],
		      "SubnetId": {"Ref" : "Subnet2" }
		    } ],
		    "UserData":
		    {"Fn::If" : 
    			 	[
    			 		"PingMe",
      					
      					
      					{ "Fn::Base64": { "Fn::Join": [ "", [
      						"#!/bin/bash -e\n",
      						"echo ping ",
      						{"Fn::GetAtt" : [ "Ec2Instance1" , "PrivateIp" ]},
      						" > /tmp/ping.sh\n",
      						"cd /tmp\n",
      						"chmod 777 ping.sh\n",
      						"nohup ./ping.sh &\n"
     					] ] } },
      					
      					{"Ref" : "AWS::NoValue"}
  				    ]
  				 } 
	
		 }
	},

    "AMIInfo": {
      "Type": "Custom::AMIInfo",
      "Properties": {
        "ServiceToken": { "Fn::GetAtt" : ["AMIInfoFunction", "Arn"] },
        "Region": { "Ref": "AWS::Region" },
        "Architecture": { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] }
      }
    },
 
    "AMIInfoFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
            "S3Bucket": { "Ref": "S3Bucket" },
            "S3Key": { "Ref": "S3ZipFile" }
        },
        "Handler": { "Fn::Join" : [ "", [{ "Ref": "ModuleName" },".handler"] ] },
        "Role": { "Fn::GetAtt" : ["LambdaExecutionRole", "Arn"] },        
        "Runtime": "nodejs",
        "Timeout": "30"
      }
    },
    
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {"Fn::Join": ["-", ["LambdaExecutionRole", {"Ref": "AWS::Region"}]]},
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
              "Effect": "Allow",
              "Principal": {"Service": ["lambda.amazonaws.com"]},
              "Action": ["sts:AssumeRole"]
          }]
        },
        "Path": "/",
        "Policies": [{
          "PolicyName": "LamdaAmiLookupRole",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
                "Effect": "Allow",
                "Action": ["logs:CreateLogGroup","logs:CreateLogStream","logs:PutLogEvents"],
                "Resource": "arn:aws:logs:*:*:*"
            },
            {
                "Effect": "Allow",
                "Action": ["ec2:DescribeImages"],
                "Resource": "*"
            }]
          }
        }]
      }
    }
  },
  "Outputs" : {
     "LambdaFunction" : {
      "Description": "Lambda Function",
      "Value" : { "Ref": "AMIInfoFunction" }
      }
   }
}